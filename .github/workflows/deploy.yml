name: Deploy with Terraform

on:
  push:
    branches:
      - main
  workflow_call:
    secrets:
      GIT_CRYPT_KEY:
        required: true
  workflow_dispatch:

concurrency: Production

jobs:
  deploy:
    name: Deploy with Terraform
    runs-on: ubuntu-22.04
    environment: Production
    outputs:
      commit_hash: ${{ steps.git-commit.outputs.commit_hash }}
    steps:
      - uses: actions/checkout@v3
        with:
          # Use ref_name instead of ref so we always get the branch to pull our
          # latest commit from.
          ref: ${{ github.ref_name }}

      - name: Install Nix packages
        id: nix-install
        uses: diamondburned/cache-install@9b7396de1f9bf78769a85aa1e890d8d11dc0faee
        with:
          auto-optimise: true
          shell-file: shell.nix
          instantiated-files: servers/*/default.nix

      - name: Decrypt git-crypt secrets
        uses: ./.github/actions/git-crypt
        with:
          key: ${{ secrets.GIT_CRYPT_KEY }}

      - name: Initialize Terraform
        id: terraform-init
        run: |-
          chmod 640 secrets/terraform.tfstate*
          terraform init

      - name: Calculate a Terraform deployment plan
        id: terraform-plan
        run: |-
          set +e
          terraform plan --detailed-exitcode --out="/tmp/acm-aws-plan"
          status=$?
          set -e

          if [[ $status == 1 ]]; then
            echo "::error::Terraform plan failed, exiting..."
            exit 1
          fi

          # 0 - Succeeded, diff is empty (no changes)
          # 1 - Errored
          # 2 - Succeeded, there is a diff
          echo "status=$status" >> $GITHUB_OUTPUT

      - name: Apply Terraform configurations
        id: terraform-apply
        if: steps.terraform-plan.outputs.status == 2
        run: |-
          set -o pipefail
          terraform apply --auto-approve "/tmp/acm-aws-plan" \
            |& grep -v 'deployment.null_resource.deploy_nixos (\(local\|remote\)-exec):'

      - name: Commit changes, if any
        id: git-commit
        if: steps.terraform-plan.outputs.status == 2
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Update deployment using GitHub Actions"
          branch: ${{ github.ref_name }}
